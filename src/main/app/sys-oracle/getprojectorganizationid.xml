<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">


    <flow name="GET_PROJECT_ORGANIZATION_ID_TMP" processingStrategy="synchronous">
        <vm:inbound-endpoint exchange-pattern="request-response" connector-ref="VM_IN_MEMORY" doc:name="VM_GET_PROJECT_ORGANIZATION_ID" path="VM_GET_PROJECT_ORGANIZATION_ID"/>

        <dw:transform-message doc:name="Transform to Java Object">
            <dw:set-variable variableName="inputPayload"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
        </dw:transform-message>
        <expression-component doc:name="Initialize Variables"><![CDATA[flowVars.theProject=payload;]]></expression-component>
        <vm:outbound-endpoint exchange-pattern="request-response" path="VM_GET_ORACLE_AUTH" connector-ref="VM_IN_MEMORY" doc:name="VM_GET_ORACLE_AUTH"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <expression-component doc:name="Init Oracle Auth Variables"><![CDATA[flowVars.oracleAuth=payload;]]></expression-component>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
  "GET_PROJ_ORG_MAPPING_Input": {
    "RESTHeader": {
      "RespApplication": "PA",
      "SecurityGroup": "STANDARD",
      "NLSLanguage": "AMERICAN"
    },
    "InputParameters": {
      "P_BUSINESS": "DATASITE"
    }
  }
}]]></dw:set-payload>
        </dw:transform-message>
        <ee:cache cachingStrategy-ref="ProjOrgExpirableCachingStrategy" doc:name="Cache">
            <logger message="Sending to Oracle GetLookupTable: #[message.payloadAs(java.lang.String)]" level="INFO" category="com.merrillcorp.q2c" doc:name="Logger"/>
            <set-session-variable variableName="payloadBeforeUntilSuccess" value="#[payload]" doc:name="setPayloadBeforeUntilSuccess"/>
            <until-successful maxRetries="${oracle.http.max.retries}" millisBetweenRetries="${oracle.http.milliSecondsBetweenRetries}" failureExpression="exception!=null &amp;&amp; (exception.causedBy(java.io.IOException) || exception.causedBy(java.net.ConnectException)  || exception.causedBy(java.net.SocketTimeoutException))" synchronous="true" doc:name="Until Successful">
                <http:request config-ref="oracleRequestConfiguration" path="${oracle.projectMapping.path}" method="POST" doc:name="HTTP">
                    <http:request-builder>
                        <http:header headerName="Cookie" value="#[flowVars.oracleAuth.tokenName + '=' + flowVars.oracleAuth.accessToken]"/>
                    </http:request-builder>
                </http:request>
            </until-successful>
            <logger message="Received response from Oracle ProjOrgMapping" level="INFO" category="com.merrillcorp.q2c" doc:name="Logger"/>
            <dw:transform-message doc:name="Transform Message">
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
            </dw:transform-message>
        </ee:cache>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload.OutputParameters.X_PROJECT_ORGS.X_PROJECT_ORGS_ITEM[?( $.BUSINESS_UNIT == (upper flowVars.theProject.businessUnit) and  $.REVENUE_SITE == flowVars.theProject.revenueSite[0..2] and $.COUNTRY_OF_ISSUER  == flowVars.theProject.countryOfIssuer) ].PROJ_ORG_ID]]></dw:set-payload>

        </dw:transform-message>
        <json:object-to-json-transformer mimeType="application/json" doc:name="Object to JSON"/>

        <logger message="Lookup result project org id: #[message.payloadAs(java.lang.String)]" level="INFO" category="com.merrillcorp.q2c" doc:name="Logger"/>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <logger message="#[exception.getStackTrace()]" level="ERROR" category="GET_PROJECT_ORGANIZATION_ID" doc:name="Log Exception"/>
        </catch-exception-strategy>
    </flow>


</mule>
